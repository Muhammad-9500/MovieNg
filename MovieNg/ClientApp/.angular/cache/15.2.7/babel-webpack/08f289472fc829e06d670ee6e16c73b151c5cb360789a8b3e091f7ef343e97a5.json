{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.selectedMovie = null;\n  }\n  searchMovie(title) {\n    const url = `/api/movie/Search/${encodeURIComponent(title)}`;\n    return this.http.get(url).pipe(catchError(error => {\n      console.error('Error:', error);\n      return throwError('An error occurred while searching for movies');\n    }));\n  }\n  toggleExtendedInfo(movie) {\n    if (this.selectedMovie === movie) {\n      this.selectedMovie = null; // Deselect the movie if it's already selected\n    } else {\n      this.selectedMovie = movie; // Select the clicked movie\n    }\n  }\n}\n\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAa,gBAAgB;;;AAMhD,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAAgB,IAAI,CAACC,aAAa,GAAG,IAAI;EAAE;EAEnEC,WAAW,CAACC,KAAa;IACvB,MAAMC,GAAG,GAAG,qBAAqBC,kBAAkB,CAACF,KAAK,CAAC,EAAE;IAC5D,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAUF,GAAG,CAAC,CAACG,IAAI,CACrCV,UAAU,CAAEW,KAAwB,IAAI;MACtCC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,OAAOZ,UAAU,CAAC,8CAA8C,CAAC;IACnE,CAAC,CAAC,CACH;EACH;EAEAc,kBAAkB,CAACC,KAAY;IAC7B,IAAI,IAAI,CAACV,aAAa,KAAKU,KAAK,EAAE;MAChC,IAAI,CAACV,aAAa,GAAG,IAAI,CAAC,CAAC;KAC5B,MAAM;MACL,IAAI,CAACA,aAAa,GAAGU,KAAK,CAAC,CAAC;;EAEhC;;;AArBWb,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAc,SAAZd,YAAY;EAAAe,YAFX;AAAM","names":["throwError","catchError","MovieService","constructor","http","selectedMovie","searchMovie","title","url","encodeURIComponent","get","pipe","error","console","toggleExtendedInfo","movie","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\MUHAMMAD SAIDU ABDUL\\source\\repos\\MovieNg\\MovieNg\\ClientApp\\src\\app\\_services\\MovieService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Movie } from '../__models/Movie';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\n  selectedMovie: Movie | null;\r\n\r\n  constructor(private http: HttpClient) { this.selectedMovie = null; }\r\n\r\n  searchMovie(title: string): Observable<Movie[]> {\r\n    const url = `/api/movie/Search/${encodeURIComponent(title)}`;\r\n    return this.http.get<Movie[]>(url).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.error('Error:', error);\r\n        return throwError('An error occurred while searching for movies');\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleExtendedInfo(movie: Movie) {\r\n    if (this.selectedMovie === movie) {\r\n      this.selectedMovie = null; // Deselect the movie if it's already selected\r\n    } else {\r\n      this.selectedMovie = movie; // Select the clicked movie\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}