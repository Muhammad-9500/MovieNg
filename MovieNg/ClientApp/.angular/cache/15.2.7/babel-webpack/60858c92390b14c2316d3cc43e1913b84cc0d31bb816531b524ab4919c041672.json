{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SearchMovieComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Year: \", movie_r1.year, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", movie_r1.poster !== \"N/A\" ? movie_r1.poster : \"imagesgeneric.jpeg\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport class SearchMovieComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n    this.title = '';\n    this.movies = [];\n  }\n  onSearchMovie() {\n    console.log('Searching for movie:', this.title);\n    const url = `${this.baseUrl}movie?title=${encodeURIComponent(this.title)}`;\n    this.http.get(url).pipe(map(response => {\n      return response; // Assuming the API returns the list of movies directly\n    })).subscribe(movieList => {\n      this.movies = movieList;\n      console.log('Movie List:', movieList);\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n}\nSearchMovieComponent.ɵfac = function SearchMovieComponent_Factory(t) {\n  return new (t || SearchMovieComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nSearchMovieComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchMovieComponent,\n  selectors: [[\"app-search-movie\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"mt-3\", 3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"titleInput\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"titleInput\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"id\", \"searchResults\", 1, \"mt-3\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Nicely Formatted Image\", 1, \"styled-image\", 3, \"src\"]],\n  template: function SearchMovieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Search Movies\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SearchMovieComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSearchMovie();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Enter movie title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchMovieComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵtext(9, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵtemplate(11, SearchMovieComponent_div_11_Template, 6, 3, \"div\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".styled-image[_ngcontent-%COMP%] {\\r\\n  width: 300px; \\r\\n  height: auto; \\r\\n  border: 2px solid #ddd; \\r\\n  border-radius: 10px; \\r\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \\r\\n  transition: transform 0.3s ease; \\r\\n}\\r\\n\\r\\n  \\r\\n  .styled-image[_ngcontent-%COMP%]:hover {\\r\\n    transform: scale(1.05); \\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VhcmNoLW1vdmllL3NlYXJjaC1tb3ZpZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWSxFQUFFLDBCQUEwQjtFQUN4QyxZQUFZLEVBQUUsMEJBQTBCO0VBQ3hDLHNCQUFzQixFQUFFLGlCQUFpQjtFQUN6QyxtQkFBbUIsRUFBRSx3QkFBd0I7RUFDN0Msd0NBQXdDLEVBQUUsaUJBQWlCO0VBQzNELCtCQUErQixFQUFFLHFDQUFxQztBQUN4RTs7RUFFRSxnQ0FBZ0M7RUFDaEM7SUFDRSxzQkFBc0IsRUFBRSwyQkFBMkI7SUFDbkQsd0NBQXdDLEVBQUUsNkJBQTZCO0VBQ3pFIiwic291cmNlc0NvbnRlbnQiOlsiLnN0eWxlZC1pbWFnZSB7XHJcbiAgd2lkdGg6IDMwMHB4OyAvKiBTZXQgdGhlIGRlc2lyZWQgd2lkdGggKi9cclxuICBoZWlnaHQ6IGF1dG87IC8qIE1haW50YWluIGFzcGVjdCByYXRpbyAqL1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICNkZGQ7IC8qIEFkZCBhIGJvcmRlciAqL1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIEFkZCByb3VuZGVkIGNvcm5lcnMgKi9cclxuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBBZGQgYSBzaGFkb3cgKi9cclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyAvKiBBZGQgYSBzbW9vdGggdHJhbnNpdGlvbiBvbiBob3ZlciAqL1xyXG59XHJcblxyXG4gIC8qIENTUyBzdHlsZXMgZm9yIGhvdmVyIGVmZmVjdCAqL1xyXG4gIC5zdHlsZWQtaW1hZ2U6aG92ZXIge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTsgLyogSW5jcmVhc2Ugc2l6ZSBvbiBob3ZlciAqL1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yKTsgLyogSW5jcmVhc2Ugc2hhZG93IG9uIGhvdmVyICovXHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gCAAgC;AAG5D,SAASC,GAAG,QAAQ,gBAAgB;;;;;;;ICU5BC,2BAAkC;IAE1BA,YAAiB;IAAAA,iBAAK;IAC1BA,yBAAG;IAAAA,YAAsB;IAAAA,iBAAI;IAE7BA,yBAEkC;IAGtCA,iBAAM;;;;IAREA,eAAiB;IAAjBA,oCAAiB;IAClBA,eAAsB;IAAtBA,kDAAsB;IAGpBA,eAA0E;IAA1EA,qHAA0E;;;ADT3F,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAGL,WAAW,CAACM,MAAM;IAEY,IAAI,CAACC,KAAK,GAAG,EAAE;IAAE,IAAI,CAACC,MAAM,GAAG,EAAE;EAAE;EAE3EC,aAAa;IACXC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACJ,KAAK,CAAC;IAE/C,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,eAAeC,kBAAkB,CAAC,IAAI,CAACP,KAAK,CAAC,EAAE;IAE1E,IAAI,CAACF,IAAI,CAACU,GAAG,CAAUH,GAAG,CAAC,CAACI,IAAI,CAC9Bf,GAAG,CAAEgB,QAAiB,IAAI;MACxB,OAAOA,QAAQ,CAAC,CAAC;IACnB,CAAC,CAAC,CACH,CAACC,SAAS,CACRC,SAAkB,IAAI;MACrB,IAAI,CAACX,MAAM,GAAGW,SAAS;MACvBT,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEQ,SAAS,CAAC;IACvC,CAAC,EACAC,KAAK,IAAI;MACRV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EACH;;AAxBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCvB,8BAA4B;MACpBA,6BAAa;MAAAA,iBAAK;MAEtBA,+BAAgD;MAA1CA;QAAA,OAAYwB,mBAAe;MAAA,EAAC;MAC9BxB,8BAAkB;MAC6BA,iCAAiB;MAAAA,iBAAQ;MACpEA,gCAA2F;MAAxEA;QAAA;MAAA,EAAmB;MAAtCA,iBAA2F;MAE/FA,iCAA8C;MAAAA,sBAAM;MAAAA,iBAAS;MAIjEA,+BAAqC;MACjCA,uEAUM;MACVA,iBAAM;;;MAlBqBA,eAAmB;MAAnBA,mCAAmB;MAOnBA,eAAS;MAATA,oCAAS","names":["environment","map","i0","SearchMovieComponent","constructor","http","apiUrl","title","movies","onSearchMovie","console","log","url","baseUrl","encodeURIComponent","get","pipe","response","subscribe","movieList","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\MUHAMMAD SAIDU ABDUL\\source\\repos\\MovieNg\\MovieNg\\ClientApp\\src\\app\\search-movie\\search-movie.component.ts","C:\\Users\\MUHAMMAD SAIDU ABDUL\\source\\repos\\MovieNg\\MovieNg\\ClientApp\\src\\app\\search-movie\\search-movie.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Movie } from '../__models/Movie';\r\nimport { map } from 'rxjs/operators';\r\n\n@Component({\n  selector: 'app-search-movie',\n  templateUrl: './search-movie.component.html',\n  styleUrls: ['./search-movie.component.css']\n})\nexport class SearchMovieComponent {\n  title: string;\n  baseUrl = environment.apiUrl;\n  movies: Movie[];\n  constructor(private http: HttpClient) { this.title = ''; this.movies = []; }\n\n  onSearchMovie() {\n    console.log('Searching for movie:', this.title);\r\n\r\n    const url = `${this.baseUrl}movie?title=${encodeURIComponent(this.title)}`;\r\n\r\n    this.http.get<Movie[]>(url).pipe(\r\n      map((response: Movie[]) => {\r\n        return response; // Assuming the API returns the list of movies directly\r\n      })\r\n    ).subscribe(\r\n      (movieList: Movie[]) => {\r\n        this.movies = movieList;\r\n        console.log('Movie List:', movieList);\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      }\r\n    );\n  }\n}\n","\n<div class=\"container mt-4\">\n    <h2>Search Movies</h2>\n\n    <form (ngSubmit)=\"onSearchMovie()\" class=\"mt-3\">\n        <div class=\"mb-3\">\n            <label for=\"titleInput\" class=\"form-label\">Enter movie title</label>\n            <input type=\"text\" [(ngModel)]=\"title\" name=\"title\" id=\"titleInput\" class=\"form-control\" />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n    </form>\n\n\n    <div id=\"searchResults\" class=\"mt-3\">\n        <div *ngFor=\"let movie of movies\">\n            <!-- Display movie details here -->\n            <h3>{{ movie.title }}</h3>\n            <p>Year: {{ movie.year }}</p>\n\n            <img class=\"styled-image\"\n                 src=\"{{ movie.poster !== 'N/A' ? movie.poster : '\\images\\generic.jpeg' }}\"\n                 alt=\"Nicely Formatted Image\">\n\n\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}